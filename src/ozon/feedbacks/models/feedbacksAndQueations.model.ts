import { ApiProperty } from "@nestjs/swagger";
import { IsBoolean, IsDateString, IsInt, IsArray, ValidateNested } from "class-validator";
import { Column, DataType, Model, Table } from "sequelize-typescript";
import { Type } from 'class-transformer';

interface IOzonFeedbacksAndQuestionsCreationAttrs {
    message_id: string;
}

@Table({
    tableName: 'ozon_feedbacks',
    timestamps: false,
    indexes: [
        {
            unique: true,
            fields: ['message_id'],
        },
    ]
})
export class OzonFeedbacksAndQuestions extends Model<OzonFeedbacksAndQuestions, IOzonFeedbacksAndQuestionsCreationAttrs> {
    @ApiProperty({ description: "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç–∑—ã–≤–∞.", example: "017c0db1-e985-3106-f8b1-3f490f70fcfa" })
    @Column({ type: DataType.TEXT, primaryKey: true, allowNull: false })
    message_id: string;

    @ApiProperty({ description: "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ –≤ —Å–∏—Å—Ç–µ–º–µ Ozon ‚Äî SKU.", example: 170285690 })
    @Column({ type: DataType.INTEGER })
    sku: number;

    @ApiProperty({ description: "–¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞.", example: "–ï—Ä—É–Ω–¥–∞ –ø–æ–ª–Ω–µ–π—à–∞—è. –ö–∞–∫ –æ–Ω–∞ –º–æ–≥–ª–∞ –±–µ–∑ —Å–∫–∏–¥–∫–∏ —Å—Ç–æ–∏—Ç—å –±–æ–ª–µ–µ 1000 —Ä—É–±–ª–µ–π? –ö—É–ø–∏–ª–∞ –∑–∞ 290 –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–ª–∞—Å—å. –ù–∏–∫–∞–∫–æ–≥–æ —Å—é—Ä–ø—Ä–∏–∑–∞, –ø—Ä–∏—à–ª–æ –≤ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–º –ø–∞–∫–µ—Ç–µ. –í–Ω—É—Ç—Ä–∏ –±—ã–ª —Ç–æ–ª—å–∫–æ –ø–∏–Ω–≥–≤–∏–Ω –∏ –∫–æ–ª–µ—á–∫–æ. –û –∫–∞–∫–∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö –∏–¥—ë—Ç —Ä–µ—á—å? –ù–µ —Å—Ç–æ–∏—Ç —ç—Ç–∞ —á—É—à—å 300‚ÇΩ. –ù–µ –≤–µ–¥–∏—Ç–µ—Å—å. –†–µ–±—ë–Ω–æ–∫ –¥–∞–∂–µ —Ä–∞—Å—Å—Ç—Ä–æ–∏–ª—Å—è. –¶–∏—Ç–∞—Ç–∞ ¬´–∏ —ç—Ç–æ –≤—Å–µ?!¬ª. –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ, –∑–∞ —Ç–∞–∫–∏–µ –¥–µ–Ω—å–≥–∏ —Ö–æ—Ç—å –±—ã –∫–æ–Ω—Ñ–µ—Ç—É –≤–ª–æ–∂–∏–ª–∏üòÑ" })
    @Column({ type: DataType.TEXT })
    text: string;

    @ApiProperty({ description: "–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞.", example: "2020-04-25T20:26:52.585615Z" })
    @IsDateString()
    @Column({ type: DataType.DATE })
    date: string;

    @ApiProperty({ description: "–û—Ü–µ–Ω–∫–∞ –æ—Ç–∑—ã–≤–∞.", example: 1 })
    @IsInt()
    @Column({ type: DataType.INTEGER })
    rating: number;

    @ApiProperty({ description: "–ë—Ä–µ–Ω–¥ —Ç–æ–≤–∞—Ä–∞.", example: "Happy Valley" })
    @Column({ type: DataType.TEXT })
    brand: string;

    @ApiProperty({ description: "–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞.", example: "4296675" })
    @Column({ type: DataType.TEXT })
    article: string;

    @ApiProperty({ description: "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ –≤ —Å–∏—Å—Ç–µ–º–µ Ozon.", example: "21104339" })
    @Column({ type: DataType.TEXT })
    ozon_id: string;

    @ApiProperty({ description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ).", example: "–§–æ—Ç–æ: https://cdn1.ozone.ru/s3/rp-photo-2/44982e54-ace2-4be4-b166-ec7a86ec0ec7.jpeg" })
    @Column({ type: DataType.TEXT })
    media: string;

    @ApiProperty({ description: "–¢–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è", example: "–û—Ç–∑—ã–≤" })
    @Column({ type: DataType.TEXT })
    kind: string;

    @ApiProperty({ description: "–¢–∏–ø –∫–∞–±–∏–Ω–µ—Ç–∞", example: "PK" })
    @Column({ type: DataType.TEXT })
    type: string;

    @ApiProperty({ description: "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", example: "–ö–æ–ª–µ—Å–æ –¥–ª—è –≥—Ä—ã–∑—É–Ω–æ–≤" })
    @Column({ type: DataType.TEXT })
    product_name: string;

    @ApiProperty({ description: "–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞", example: "–û—Ç–≤–µ—á–µ–Ω" })
    @Column({ type: DataType.TEXT })
    status: string;

    @ApiProperty({ description: "–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞", example: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É" })
    @Column({ type: DataType.TEXT })
    answer: string;

    @ApiProperty({ description: "–ê–≤—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∞", example: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞" })
    @Column({ type: DataType.TEXT })
    manager: string;

    @ApiProperty({ description: "–ñ–∞–ª–æ–±–∞ –Ω–∞ –æ—Ç–∑—ã–≤", example: true })
    @Column({ type: DataType.BOOLEAN })
    reject: boolean;

    @ApiProperty({ description: "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π 1", example: "–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ" })
    @Column({ type: DataType.TEXT })
    comments1: string;

    @ApiProperty({ description: "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π 2", example: "–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ" })
    @Column({ type: DataType.TEXT })
    comments2: string;

    @ApiProperty({ description: "–°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –û–∑–æ–Ω", example: "–ó–∞–≥—Ä—É–∂–µ–Ω" })
    @Column({ type: DataType.TEXT })
    loading_status: string;

    @ApiProperty({ description: "–ü—Ä–∏–∑–Ω–∞–∫ –°–¢–ú", example: true })
    @Column({ type: DataType.BOOLEAN })
    isStm: boolean;

    @ApiProperty({ description: "–î–∞—Ç–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞.", example: "2020-04-25T20:26:52.585615Z" })
    @IsDateString()
    @Column({ type: DataType.DATE })
    archive_date: string;

    @ApiProperty({ description: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤", example: 0 })
    @IsInt()
    @Column({ type: DataType.INTEGER })
    comments_amount: number;

    @ApiProperty({ description: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏–∑–ª–∞–π–∫–æ–≤", example: 0 })
    @IsInt()
    @Column({ type: DataType.INTEGER })
    dislikes_amount: number;

    @ApiProperty({ description: "–£—á–∞—Å—Ç–Ω–∏–∫ —Ä–µ–π—Ç–∏–Ω–≥–∞", example: true })
    @IsBoolean()
    @Column({ type: DataType.BOOLEAN })
    is_rating_participant: boolean;

    @ApiProperty({ description: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤", example: 0 })
    @IsInt()
    @Column({ type: DataType.INTEGER })
    likes_amount: number;

    @ApiProperty({ description: "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞", example: "string" })
    @Column({ type: DataType.TEXT })
    order_status: string

    @ApiProperty({ description: "–°—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –û–∑–æ–Ω", example: "string" })
    @Column({ type: DataType.TEXT })
    message_status: string

    feedbackCount?: number;
}
